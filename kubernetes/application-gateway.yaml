apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: app-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: httpbin-credential # 
    hosts:
    - "app-orchestrating.com"
    - "app-receiver.com"
    - "app-sender.com"
    - "internal-application-gateway.com"



---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: app-internal-application-gateway
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
  - name: https
    hostname: "internal-application-gateway.com"
    port: 443
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - name: httpbin-credential
    allowedRoutes:
      namespaces:
        from: Selector
        selector:
          matchLabels:
            kubernetes.io/metadata.name: default


---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: app-sender-gateway
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
  - name: https
    hostname: "app-sender.com"
    port: 443
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - name: httpbin-credential
    allowedRoutes:
      namespaces:
        from: Selector
        selector:
          matchLabels:
            kubernetes.io/metadata.name: default
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: app-receiver-gateway
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
  - name: https
    hostname: "app-receiver.com"
    port: 443
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - name: httpbin-credential
    allowedRoutes:
      namespaces:
        from: Selector
        selector:
          matchLabels:
            kubernetes.io/metadata.name: default
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: app-orchestrating-gateway
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
  - name: https
    hostname: "app-orchestrating.com"
    port: 443
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - name: httpbin-credential
    allowedRoutes:
      namespaces:
        from: Selector
        selector:
          matchLabels:
            kubernetes.io/metadata.name: default
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: app-sender-virtualservice
  # namespace: product
spec:
  hosts:
  - "app-sender.com"
  gateways:
  - istio-system/app-gateway
  http:
    - match:
      - uri:
          regex: "^/.*"
      # rewrite:
      #   uri: "/"
      route:
      - destination:
          host: app-sender
          port:
            number: 80


---



apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: app-receiver-virtualservice
  # namespace: product
spec:
  hosts:
  - "app-receiver.com"
  gateways:
  - istio-system/app-gateway
  http:
  - match:
    - uri:
        regex: "^/.*"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: app-receiver
        port:
          number: 80




---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: app-orchestrating-virtualservice
  # namespace: product
spec:
  hosts:
  - "app-orchestrating.com"
  gateways:
  - istio-system/app-gateway
  http:
  - match:
    - uri:
        regex: "^/.*"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: app-orchestrating
        port:
          number: 80



---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: app-internal-application-gateway-virtualservice
  # namespace: product
spec:
  hosts:
  - "internal-application-gateway.com"
  gateways:
  - istio-system/app-gateway
  http:
  - match:
    - uri:
        regex: "^/.*"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: internal-application-gateway
        port:
          number: 80
 